openapi: 3.0.0
info:
  title: UniManager API Documentation
  description: Needs no description.
  version: 0.0.1
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        first_name:
          type: string
          example: Tina
        middle_name:
          type: string
          nullable: true
          example: Latoya
        last_name:
          type: string
          example: Turner
        email:
          type: string
          format: email
          example: tinaturner@example.com
        email_verified_at:
          type: string
          format: date-time
          nullable: true
        remember_token:
          type: string
          nullable: true
        password:
          type: string
          format: password
        phone:
          type: string
        address_line_1:
          type: string
        address_line_2:
          type: string
          nullable: true
        city:
          type: string
          example: Charlotte
        region:
          type: string
          example: North Carolina
        country:
          type: string
          example: United States of America
        postal_code:
          type: string
          example: 28001
        id_card:
          type: string
    UserRequestBody:
      type: object
      properties:
        first_name:
          type: string
          example: Tina
        middle_name:
          type: string
          nullable: true
          example: Latoya
        last_name:
          type: string
          example: Turner
        phone:
          type: string
        address_line_1:
          type: string
        address_line_2:
          type: string
          nullable: true
        city:
          type: string
          example: Charlotte
        region:
          type: string
          example: North Carolina
        country:
          type: string
          example: United States of America
        postal_code:
          type: string
          example: 28001
        id_card:
          type: string
    Department:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: DCIC
    DepartmentArray:
      type: array
      items:
        $ref: '#/components/schemas/Department'
    Major:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Computer Science
        department_id:
          type: integer
          format: int64
    MajorArray:
      type: array
      items:
        $ref: '#/components/schemas/Major'
    JobOffer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        requirements:
          type: string
        benefits:
          type: string
        interview_at:
          type: string
          format: date-time
        department_id:
          type: integer
          format: int64
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
        public:
          type: boolean
        department:
          $ref: '#/components/schemas/Department'
    JobOfferArray:
      type: array
      items:
        $ref: '#/components/schemas/JobOffer'
    ScholarshipOffer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        requirements:
          type: string
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
        public:
          type: boolean
        majors:
          type: array
          items:
            $ref: '#/components/schemas/Major'
          uniqueItems: true
    ScholarshipOfferArray:
      type: array
      items:
        $ref: '#/components/schemas/ScholarshipOffer'
    Application:
      type: object
      properties:
        id:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/User'
        offer_id:
          type: integer
          format: int64
        offer_type:
          type: string
        status:
          type: string
        offer:
          type: object
          oneOf:
            - $ref: '#/components/schemas/JobOffer'
            - $ref: '#/components/schemas/ScholarshipOffer'
        major_id:
          type: integer
          format: int64
          nullable: true
        major:
          $ref: '#/components/schemas/Major'
        document_files:
          type: array
          items:
            $ref: '#/components/schemas/DocumentationFile'
          uniqueItems: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          uniqueItems: true
    ApplicationArray:
      type: array
      items:
        $ref: '#/components/schemas/Application'
    DocumentationFile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        path:
          type: string
          format: uri
        application_id:
          type: integer
          format: int64
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
          format: uri
        application_id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/User'
    PaginatedLink:
      type: object
      properties:
        url:
          type: string
          nullable: true
          example: https://unimanager.snowlinks.net/api/model?page=5
        label:
          type: string
          example: 5
        active:
          type: boolean
  responses:
    OK:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: The action was performed successfully.
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: The page was not found.
    UnprocessableContent:
      description: Unprocessable Content
      content:
        application/json:
          schema:
            type: object
            properties:
              response:
                type: object
                properties:
                  status:
                    type: integer
                    minimum: 422
                    maximum: 422
                    example: 422
                  data:
                    type: object
                    properties:
                      errors:
                        type: object
                        additionalProperties:
                          type: array
                          items:
                            type: string
                      message:
                        type: string
                        example: The email field is required.
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: You do not have access rights to perform this action.
    CSRF:
      description: CSRF Mismatch
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: CSRF Mismatch
    User:
      description: User Response
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
              first_name:
                type: string
                example: Tina
              middle_name:
                type: string
                nullable: true
                example: Latoya
              last_name:
                type: string
                example: Turner
              email:
                type: string
                format: email
                example: tinaturner@example.com
              phone:
                type: string
              address_line_1:
                type: string
              address_line_2:
                type: string
                nullable: true
              city:
                type: string
                example: Charlotte
              region:
                type: string
                example: North Carolina
              country:
                type: string
                example: United States of America
              postal_code:
                type: string
                example: 28001
              id_card:
                type: string
    DepartmentList:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepartmentArray'
    MajorList:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MajorArray'
    JobOfferList:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobOfferArray'
    ScholarshipOfferList:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScholarshipOfferArray'
    ApplicationList:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplicationArray'
    JobOfferPaginated:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/JobOfferArray'
              links:
                type: array
                items:
                  $ref: '#/components/schemas/PaginatedLink'
              current_page:
                type: integer
                example: 5
              per_page:
                type: integer
                example: 15
                default: 15
              from:
                type: integer
                example: 1
                nullable: true
              to:
                type: integer
                example: 15
                nullable: true
              total:
                type: integer
                example: 64
    ScholarshipOfferPaginated:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/ScholarshipOfferArray'
              links:
                type: array
                items:
                  $ref: '#/components/schemas/PaginatedLink'
              current_page:
                type: integer
                example: 5
              per_page:
                type: integer
                example: 15
                default: 15
              from:
                type: integer
                example: 1
                nullable: true
              to:
                type: integer
                example: 15
                nullable: true
              total:
                type: integer
                example: 64
  parameters:
    DepartmentId:
      in: path
      name: departmentId
      schema:
        type: integer
        format: int64
      required: true
      description: Numeric ID of the Department
    MajorId:
      in: path
      name: majorId
      schema:
        type: integer
        format: int64
      required: true
      description: Numeric ID of the Major
    JobOfferId:
      in: path
      name: jobOfferId
      schema:
        type: integer
        format: int64
      required: true
      description: Numeric ID of the job offer
    ScholarshipOfferId:
      in: path
      name: scholarshipOfferId
      schema:
        type: integer
        format: int64
      required: true
      description: Numeric ID of the scholarship offer
    ApplicationId:
      in: path
      name: applicationId
      schema:
        type: integer
        format: int64
      required: true
      description: Numeric ID of the application
paths:
  /api/account:
    get:
      tags:
        - Users
      summary: Show account information.
      operationId: account.index
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/account/update:
    patch:
      tags:
        - Users
      summary: Update account information.
      operationId: account.update
      requestBody:
        description: The updated data to save.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/User'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /api/departments:
    get:
      tags:
        - Departments
      summary: List all departments.
      operationId: departments.index
      responses:
        '200':
          $ref: '#/components/responses/DepartmentList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/departments/store:
    post:
      tags:
        - Departments
      summary: Creates a new Department.
      operationId: departments.store
      requestBody:
        description: The new department's name.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /api/departments/{departmentId}/find:
    get:
      tags:
        - Departments
      summary: Get a Department by ID
      operationId: departments.find
      parameters:
        - $ref: '#/components/parameters/DepartmentId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/departments/{departmentId}/update:
    patch:
      tags:
        - Departments
      summary: Update the identified Department.
      operationId: departments.update
      parameters:
        - $ref: '#/components/parameters/DepartmentId'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '419':
          $ref: '#/components/responses/CSRF'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /api/departments/{departmentId}/delete:
    delete:
      tags:
        - Departments
      summary: Delete the identified Department.
      operationId: departments.delete
      parameters:
        - $ref: '#/components/parameters/DepartmentId'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '419':
          $ref: '#/components/responses/CSRF'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /api/majors:
      get:
        tags:
          - Majors
        summary: List all majors.
        operationId: majors.index
        responses:
          '200':
            $ref: '#/components/responses/MajorList'
          '403':
            $ref: '#/components/responses/Forbidden'
          '419':
            $ref: '#/components/responses/CSRF'
  /api/majors/store:
    post:
      tags:
        - Majors
      summary: Creates a new Major.
      operationId: majors.store
      requestBody:
        description: The new majors's name.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /api/majors/{majorId}/find:
    get:
      tags:
        - Majors
      summary: Get a Major by ID
      operationId: majors.find
      parameters:
        - $ref: '#/components/parameters/MajorId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Major'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/majors/{majorId}/update:
    patch:
      tags:
        - Majors
      summary: Update the identified Majors.
      operationId: majors.update
      parameters:
        - $ref: '#/components/parameters/MajorId'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '419':
          $ref: '#/components/responses/CSRF'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /api/majors/{majorId}/delete:
    delete:
      tags:
        - Majors
      summary: Delete the identified Major.
      operationId: majors.delete
      parameters:
        - $ref: '#/components/parameters/MajorId'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '419':
          $ref: '#/components/responses/CSRF'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /api/offers/job:
    get:
      tags:
        - Job Offers
      summary: List all job offers.
      operationId: offers.job.index
      responses:
        '200':
          $ref: '#/components/responses/JobOfferList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/offers/job/paginated:
    get:
      tags:
        - Job Offers
      summary: List all job offers in a paginated manner.
      operationId: offers.job.paginated
      responses:
        '200':
          $ref: '#/components/responses/JobOfferPaginated'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/offers/job/{jobOfferId}/find:
    get:
          tags:
            - Job Offers
          summary: Get a job offer by ID
          operationId: offers.job.find
          parameters:
            - $ref: '#/components/parameters/JobOfferId'
          responses:
            '200':
              description: OK
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/JobOffer'
            '403':
              $ref: '#/components/responses/Forbidden'
            '404':
              $ref: '#/components/responses/NotFound'
            '419':
              $ref: '#/components/responses/CSRF'
  /api/offers/job/{jobOfferId}/store:
      post:
        tags:
          - Job Offers
        summary: Creates a new job offer.
        operationId: offers.job.store
        requestBody:
          description: The new job offer's name.
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
        responses:
          '200':
            $ref: '#/components/responses/OK'
          '403':
            $ref: '#/components/responses/Forbidden'
          '419':
            $ref: '#/components/responses/CSRF'
          '422':
            $ref: '#/components/responses/UnprocessableContent'
  /api/offers/job/{jobOfferId}/update:
      patch:
        tags:
          - Job Offers
        summary: Update the identified job offer.
        operationId: offers.job.update
        parameters:
          - $ref: '#/components/parameters/JobOfferId'
        responses:
          '200':
            $ref: '#/components/responses/OK'
          '403':
            $ref: '#/components/responses/Forbidden'
          '404':
            $ref: '#/components/responses/NotFound'
          '419':
            $ref: '#/components/responses/CSRF'
          '422':
            $ref: '#/components/responses/UnprocessableContent'
  /api/offers/job/{jobOfferId}/delete:
    delete:
      tags:
        - Job Offers
      summary: Delete the identified job offer.
      operationId: offers.job.delete
      parameters:
        - $ref: '#/components/parameters/JobOfferId'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '419':
          $ref: '#/components/responses/CSRF'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /api/offers/scholarship:
    get:
      tags:
        - Scholarship Offers
      summary: List all scholarship offers.
      operationId: offers.scholarship.index
      responses:
        '200':
          $ref: '#/components/responses/ScholarshipOfferList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/offers/scholarship/paginated:
    get:
      tags:
        - Scholarship Offers
      summary: List all scholarship offers in a paginated manner.
      operationId: offers.scholarship.paginated
      responses:
        '200':
          $ref: '#/components/responses/ScholarshipOfferPaginated'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/offers/scholarship/{scholarshipOfferId}/find:
    get:
      tags:
        - Scholarship Offers
      summary: Get a scholarship offer by ID
      operationId: offers.scholarship.find
      parameters:
        - $ref: '#/components/parameters/ScholarshipOfferId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScholarshipOffer'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/offers/scholarship/{scholarshipOfferId}/store:
    post:
      tags:
        - Scholarship Offers
      summary: Creates a new scholarship offer.
      operationId: offers.scholarship.store
      requestBody:
        description: The new scholarship offer's name.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /api/offers/scholarship/{scholarshipOfferId}/update:
    patch:
      tags:
        - Scholarship Offers
      summary: Update the identified scholarship offer.
      operationId: offers.scholarship.update
      parameters:
        - $ref: '#/components/parameters/ScholarshipOfferId'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '419':
          $ref: '#/components/responses/CSRF'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /api/offers/scholarship/{scholarshipOfferId}/delete:
    delete:
      tags:
        - Scholarship Offers
      summary: Delete the identified scholarship offer.
      operationId: offers.scholarship.delete
      parameters:
        - $ref: '#/components/parameters/ScholarshipOfferId'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '419':
          $ref: '#/components/responses/CSRF'
        '422':
          $ref: '#/components/responses/UnprocessableContent'
  /api/applications:
    get:
      tags:
        - Applications
      summary: List all applications.
      operationId: applications.index
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/pending:
    get:
      tags:
        - Applications
      summary: List all pending applications.
      operationId: applications.pending.index
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/documentation:
    get:
      tags:
        - Applications
      summary: List all applications in need of documentation.
      operationId: applications.documentation.index
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/accepted:
    get:
      tags:
        - Applications
      summary: List all accepted applications.
      operationId: applications.accepted.index
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/rejected:
    get:
      tags:
        - Applications
      summary: List all rejected applications.
      operationId: applications.rejected.index
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/paginated:
    get:
      tags:
        - Applications
      summary: List all applications in a paginated manner.
      operationId: applications.paginated
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/pending/paginated:
    get:
      tags:
        - Applications
      summary: List all pending applications in a paginated manner.
      operationId: applications.pending.paginated
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/documentation/paginated:
    get:
      tags:
        - Applications
      summary: List all applications in need of documentation in a paginated manner.
      operationId: applications.documentation.paginated
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/accepted/paginated:
    get:
      tags:
        - Applications
      summary: List all accepted applications in a paginated manner.
      operationId: applications.accepted.paginated
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/rejected/paginated:
    get:
      tags:
        - Applications
      summary: List all rejected applications in a paginated manner.
      operationId: applications.rejected.paginated
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'  
  /api/applications/{applicationId}/find:
    get:
      tags:
        - Applications
      summary: Get an application by ID.
      operationId: applications.find
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/{applicationId}/review:
    post:
      tags:
        - Applications
      summary: Review an application.
      operationId: applications.review
      parameters:
          - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        description: Hola
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/{applicationId}/document:
    post:
      tags:
        - Applications
      summary: Request documentation for an application.
      operationId: applications.document
      parameters:
          - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        description: Hola
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/{applicationId}/accept:
    post:
      tags:
        - Applications
      summary: Accept an application.
      operationId: applications.accept
      parameters:
          - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        description: Hola
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/{applicationId}/reject:
    post:
      tags:
        - Applications
      summary: Reject an application.
      operationId: applications.reject
      parameters:
          - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        description: Hola
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/job:
    get:
      tags:
        - Applications
      summary: List all job applications.
      operationId: applications.job.index
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/job/pending:
    get:
      tags:
        - Applications
      summary: List all pending job applications.
      operationId: applications.job.pending.index
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/job/documentation:
    get:
      tags:
        - Applications
      summary: List all job applications in need of documentation.
      operationId: applications.job.documentation.index
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/job/accepted:
    get:
      tags:
        - Applications
      summary: List all accepted job applications.
      operationId: applications.job.accepted.index
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/job/rejected:
    get:
      tags:
        - Applications
      summary: List all rejected job applications.
      operationId: applications.job.rejected.index
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/job/paginated:
    get:
      tags:
        - Applications
      summary: List all job applications in a paginated manner.
      operationId: applications.job.paginated
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/job/pending/paginated:
    get:
      tags:
        - Applications
      summary: List all pending job applications in a paginated manner.
      operationId: applications.job.pending.paginated
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/job/documentation/paginated:
    get:
      tags:
        - Applications
      summary: List all job applications in need of documentation in a paginated manner.
      operationId: applications.job.documentation.paginated
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/job/accepted/paginated:
    get:
      tags:
        - Applications
      summary: List all accepted job applications in a paginated manner.
      operationId: applications.job.accepted.paginated
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/job/rejected/paginated:
    get:
      tags:
        - Applications
      summary: List all rejected job applications in a paginated manner.
      operationId: applications.job.rejected.paginated
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/scholarship:
    get:
      tags:
        - Applications
      summary: List all scholarship applications.
      operationId: applications.scholarship.index
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/scholarship/pending:
    get:
      tags:
        - Applications
      summary: List all pending scholarship applications.
      operationId: applications.scholarship.pending.index
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/scholarship/documentation:
    get:
      tags:
        - Applications
      summary: List all scholarship applications in need of documentation.
      operationId: applications.scholarship.pending.index
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/scholarship/accepted:
    get:
      tags:
        - Applications
      summary: List all accepted scholarship applications.
      operationId: applications.scholarship.accepted.index
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/scholarship/rejected:
    get:
      tags:
        - Applications
      summary: List all rejected scholarship applications.
      operationId: applications.scholarship.rejected.index
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/scholarship/paginated:
    get:
      tags:
        - Applications
      summary: List all scholarship applications in a paginated manner.
      operationId: applications.scholarship.paginated
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/scholarship/pending/paginated:
    get:
      tags:
        - Applications
      summary: List all pending scholarship applications in a paginated manner.
      operationId: applications.scholarship.pending.paginated
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/scholarship/documentation/paginated:
    get:
      tags:
        - Applications
      summary: List all scholarship applications in need of documentation in a paginated manner.
      operationId: applications.scholarship.documentation.paginated
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/scholarship/accepted/paginated:
    get:
      tags:
        - Applications
      summary: List all accepted scholarship applications in a paginated manner.
      operationId: applications.scholarship.accepted.paginated
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'
  /api/applications/scholarship/rejected/paginated:
    get:
      tags:
        - Applications
      summary: List all rejected scholarship applications in a paginated manner.
      operationId: applications.scholarship.rejected.paginated
      responses:
        '200':
          $ref: '#/components/responses/ApplicationList'
        '403':
          $ref: '#/components/responses/Forbidden'
        '419':
          $ref: '#/components/responses/CSRF'